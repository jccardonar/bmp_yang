<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" ipr="trust200902" docName="draft-xxx-grow-bmp-yang-00">
  <front>
    <title abbrev="BMP YANG Module">BMP YANG Module</title>
    <author fullname="Camilo Cardona" initials="C" surname="Cardona ">
      <organization>NTT</organization>
      <address>
        <postal>
          <street>164-168, Carrer de Numancia</street>

          <city>Barcelona</city>

          <code>08029</code>

          <country>Spain</country>
        </postal>

        <email>camilo@ntt.net</email>
      </address>
    </author>
    <author fullname="Paolo Lucente" initials="P." surname="Lucente">
      <organization>NTT</organization>
      <address>
        <postal>
          <street>Siriusdreef 70-72</street>
          <city>Hoofddorp</city>
          <region>WT</region>
          <code>2132</code>
          <country>Netherlands</country>
        </postal>
        <email>paolo@ntt.net</email>
      </address>
    </author>
    <author fullname="Thomas Graf" initials="T." surname="Graf">
      <organization>Swisscom</organization>
      <address>
        <postal>
          <street>Binzring 17</street>
          <city>Zurich 8045</city>
          <country>Switzerland</country>
        </postal>
        <email>thomas.graf@swisscom.com</email>
      </address>
    </author>     
    <author fullname="Benoit Claise" initials="B" surname="Claise">
      <organization>Huawei</organization>
      <address>
        <email>benoit.claise@huawei.com</email>
      </address>
    </author> 
    <date/>
    <area>OPS</area>
    <workgroup>GROW</workgroup>
    <abstract>
      <t> 
        This document proposes a YANG module for BMP (BGP Monitoring Protocol) configuration and monitoring.
        A complementary RPC triggers a refresh of the session of a BMP station.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Terminology" anchor="terminology">
       <t>
         The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
         NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
         "MAY", and "OPTIONAL" in this document are to be interpreted as
         described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
         when, and only when, they appear in all capitals, as shown here.
      </t>    
       <t>
           Routing Information Bases, peers, monitoring stations are defined in  <xref target="RFC7854"/>.
      </t>    
    </section>   
    <section title="Introduction" anchor="introduction">
       <t>
           This document specifies a YANG module for configuring and monitoring
           the BGP Monitoring Protocol (BMP) <xref target="RFC7854"/>. The
           model provides parameters for defining BMP stations, tuning their
           session attributes, and monitoring their operational metrics. The
           model also includes different parameters for selecting the data
           to send to each BMP station as precise as possible.
       </t> 
    </section>  

    <section title="Concepts" anchor="concepts">
       <t>
           The BMP YANG model provides the methods for managing BMP  monitoring stations. It includes:
      </t>     
      <t> 
        <list style="symbols">
          <t> 
              Connectivity parameters, including station IP address and destination port.
          </t>
          <t> 
              BMP session parameters, such as defining the BMP initiation message
              or the interval for statistics messages.
          </t>
          <t> 
              BGP Data sources. The model requires the explicit configuration
              of the RIBs and address family to send to each monitoring
              station. For Adj-RIB-in and Adj-RIB-out,both post and pre policy,
              the the model also requires the peers from which to originate
              data. In those RIBs, the value "all_peers" can be used if the
              operators desires to receive data of all peers. 
          </t>
          <t> 
              BMP station session statistics. 
          </t>
          <t> 
              Session reset action.
          </t>
        </list>
      </t>     
    </section>

    <section title="Base ietf-bmp YANG module">
      <section title="Tree View" anchor="ietf-bmp-tree-view">
        <t>
        The following tree diagram provides an overview of the ietf-bmp.yang
            data model.
        </t>
        <t>
          <figure>
            <artwork><![CDATA[
module: ietf-bmp
  +--rw bmp
     +--rw stations
     |  +--rw station* [id]
     |     +--rw id               string
     |     +--rw connection
     |     |  +--rw destination-address    inet:ip-address
     |     |  +--rw local-address?         inet:ip-address
     |     |  +--rw destination-port?      inet:ip-address
     |     +--rw bmp_session
     |     |  +--rw initiation-message?    string
     |     |  +--rw statistics-interval?   uint32
     |     +--rw bmp_sources
     |     |  +--rw adj-rib-in-pre
     |     |  |  +--rw enabled?            boolean
     |     |  |  +--rw address-families
     |     |  |     +--rw address-family* [name]
     |     |  |        +--rw name     leafref
     |     |  |        +--rw peers*   union
     |     |  +--rw adj-rib-in-post
     |     |  |  +--rw enabled?            boolean
     |     |  |  +--rw address-families
     |     |  |     +--rw address-family* [name]
     |     |  |        +--rw name     leafref
     |     |  |        +--rw peers*   union
     |     |  +--rw local-rib
     |     |  |  +--rw enabled?            boolean
     |     |  |  +--rw address-families*   identityref
     |     |  +--rw adj-rib-out-pre
     |     |  |  +--rw enabled?            boolean
     |     |  |  +--rw address-families
     |     |  |     +--rw address-family* [name]
     |     |  |        +--rw name     leafref
     |     |  |        +--rw peers*   union
     |     |  +--rw adj-rib-out-post
     |     |     +--rw enabled?            boolean
     |     |     +--rw address-families
     |     |        +--rw address-family* [name]
     |     |           +--rw name     leafref
     |     |           +--rw peers*   union
     |     +--rw session-stats
     |        +--ro established-session?               boolean
     |        +--ro total-route-monitoring-messages?   uint32
     |        +--ro total-statistics-messages?         uint32
     |        +--ro total-peer-down-messages?          uint32
     |        +--ro total-peer-up-messages?            uint32
     |        +--ro total-initiation-messages?         uint32
     |        +--ro total-route-mirroring-messages?    uint32
     +--rw actions
        +---x session-reset
           +---w input
           |  +---w station?   -> /bmp/stations/station/id
           +--ro output
              +--ro (outcome)?
                 +--:(success)
                 |  +--ro success?   empty
                 +--:(failure)
                    +--ro failure?   string
           ]]></artwork>
          </figure>
        </t> 
      </section>    

      <section title="YANG Module" anchor="ietf-bmp">
        <t>&lt;CODE BEGINS> file "ietf-bmp@2022-01-27.yang"</t>
          <figure>
            <artwork><![CDATA[
=============== NOTE: '\\' line wrapping per RFC 8792 ===============

module ietf-bmp {
    yang-version 1.1;
    namespace "urn:ietf:params:xml:ns:yang:ietf-bmp";

    prefix ietf-bmp;

    import ietf-inet-types {
      prefix "inet";
      reference
        "RFC 6991: Common YANG Data Types";
    }

    import ietf-routing {
       prefix rt;
       reference
         "RFC 8349, A YANG Data Model for Routing Management
          (NMDA Version).";
     }

    import ietf-bgp-types {
       prefix bt;
       reference
         "RFC XXXX, BGP YANG Model for Service Provider Network.";
     }

    import ietf-bgp {
       prefix bgp;
       reference
         "RFC XXXX: BGP YANG module for Service Provider Network.";
     }

    organization "IETF GROW Working Group";
    contact
       "WG Web:   <https://datatracker.ietf.org/wg/grow/>
        WG List:  <mailto:grow@ietf.org>

        Author:  Camilo Cardona
           <mailto:camilo@ntt.net>

        Author:  Paolo Lucente
           <mailto:cpaolo@ntt.net>

        Author:  Thomas Graf
           <mailto:thomas.graf@swisscom.com>

        Author:  Benoit Claise
           <mailto:benoit.claise@huawei.com>";

    description "This module specifies a structure for BMP (BGP Moni\
\toring
        Protocol) configuration and monitoring.

        The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
        'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',
        'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document
        are to be interpreted as described in BCP 14 (RFC 2119)
        (RFC 8174) when, and only when, they appear in all
        capitals, as shown here.

        Copyright (c) 2022 IETF Trust and the persons identified as
        authors of the code.  All rights reserved.

        Redistribution and use in source and binary forms, with or
        without modification, is permitted pursuant to, and subject \
\to
        the license terms contained in, the Revised BSD License set
        forth in Section 4.c of the IETF Trust's Legal Provisions
        Relating to IETF Documents
        (https://trustee.ietf.org/license-info).

        This version of this YANG module is part of RFC 9196
        (https://www.rfc-editor.org/info/rfc9196); see the RFC itself
        for full legal notices.";

    revision 2022-01-27 { 
      description 
      "initial version";
      reference
         "[RFC-to-be]: BMP YANG Module";
    }

    typedef bmp_peer_types {
      type enumeration {
        enum all_peers { 
          value 10; 
          description "Selects all peers";
          }
      }
      description
      "Enum values for peer selection specific for BMP";
    }

    grouping bmp_ip_connection {
      description "common elements for defining connectivity to a bm\
\p station";

      leaf destination-address {
        type inet:ip-address;
        mandatory true;
        description
         "Destination IP address of station";
      }

      leaf local-address {
        type inet:ip-address;
        description
         "Local IP address to source connections";
      }

      leaf destination-port {
        type inet:ip-address;
        description
         "Destination port for connections";
      }
    }

    grouping bmp_peer_ribs_filter {
      description "Leaves for configuring RIBs where origin/destinat\
\ion peers are well defined.";

      leaf enabled {
           type boolean;
           description "Enables the specified RIB";
      }

      container address-families {
        description "container for lists of address-families";
        list address-family {
          key "name";
          description "List of address families. The name of the add\
\ress family, as defined in the BGP model is used for keying.";

          leaf name {
            type leafref {
             path "/rt:routing/rt:control-plane-protocols/rt:control\
\-plane-protocol/bgp:bgp/bgp:global/bgp:afi-safis/bgp:afi-safi/bgp:n\
\ame";
            }
            description "Name of the address family";
          }

          leaf-list peers {
            type union {
              type leafref {
               path "/rt:routing/rt:control-plane-protocols/rt:contr\
\ol-plane-protocol/bgp:bgp/bgp:neighbors/bgp:neighbor/bgp:remote-add\
\ress";
              }
              type bt:peer-type;
              type bmp_peer_types;
            }
            description "Peers can be identified by a remote-address\
\, or by a enum value corresponding to groups of peers. This way an \
\operator can select all external peers, all internal peers, or all \
\peers.";
          }
        }
      }
    }

    grouping bmp_route_monitoring_sources {

      description "";

      container adj-rib-in-pre {
        description 'Configuration for the adj-rib-in pre-policy';
        uses bmp_peer_ribs_filter;
      }

      container adj-rib-in-post {
        description 'Configuration for the adj-rib-in post-policy';
        uses bmp_peer_ribs_filter;
      }

      container local-rib {
        description 'Configuration for the local-rib';
        leaf enabled {
             type boolean;
             description "Enables the specified RIB";
        }

        leaf-list address-families {
          type identityref {
            base bt:afi-safi-type;
          }
          description "List of address families to enable for local-\
\rib.";
        }
      }

      container adj-rib-out-pre {
        description 'Configuration for the adj-rib-out pre-policy';
        uses bmp_peer_ribs_filter;
      }

      container adj-rib-out-post {
        description 'Configuration for the adj-rib-out post-policy';
        uses bmp_peer_ribs_filter;
      }
    }

    grouping bmp_session_options {
      description 'leaves for configuration of the bmp session';
      leaf initiation-message {
        type string;
        description "User defined message to append to the initiatio\
\n message";
      }

      leaf statistics-interval {
        type uint32;
        description "Default Interval for statistic message.";
      }
    }


    container bmp {
      description 'Main level for BMP configuration ';

      container stations {
        description 'Container for the list of BMP stations';

        list station {
          key "id";
          description
           "Configuration for BMP stations.";

          leaf id {
            type string;
            description "Identification string for the station";
          }

          // Connection, missing tcp tuning params like keep-alives,\
\ segment sizes, etc.
          container connection {
            description 'Connection details for the station';
            uses bmp_ip_connection;
          }

          container bmp_session {
            description 'BMP session options for the station';
            uses bmp_session_options;
          }

          container bmp_sources {
            description 'Configuration of the data sources for the s\
\tation';
            uses bmp_route_monitoring_sources;
          }


          container session-stats {
            description 'stats and operational values for the statio\
\n';

            leaf established-session {
             type boolean;
             config false;
             description "Value indicating if the session is current\
\ly established";
            }

            leaf total-route-monitoring-messages {
             type uint32;
             config false;
             description "Number of route-monitoring messages sent s\
\ince last successful connection";
            }

            leaf total-statistics-messages {
             type uint32;
             config false;
             description "Number of statistics messages sent since l\
\ast successful connection";
            }

            leaf total-peer-down-messages {
             type uint32;
             config false;
             description "Number of peer-down messages sent since la\
\st successful connection";
            }

            leaf total-peer-up-messages {
             type uint32;
             config false;
             description "Number of peer-up messages sent since last\
\ successful connection";
            }

            leaf total-initiation-messages {
             type uint32;
             config false;
             description "Number of initiation messages sent since l\
\ast successful connection";
            }

            leaf total-route-mirroring-messages {
             type uint32;
             config false;
             description "Number of route-mirroring messages sent si\
\nce last successful connection";
            
            }
          }
        }
      }

      container actions {
        description 'Container with the actions for the BMP operatio\
\n';
        action session-reset {
          description 'Resets the session for a station.';
          input {
            leaf station {
              type leafref {
                path "/bmp/stations/station/id";
              }
              description 'Identifies the station to reset';
            }
          }
          output {
            choice outcome {
              description 'Output of the reset operation. Either a s\
\uccess or failure. For the latter, the reason for the error is prov\
\ided.';
              leaf success {
                type empty;
                description "Reset successful";
              }
             leaf failure {
                type string;
                description
                  "Reset could not be performed. Reason is included \
\in the field";
              }
            }
          }
        }
    }
  }
 }
            ]]></artwork>
          </figure>
        <t>&lt;CODE ENDS></t>
      </section> 
    </section>  
                    
    <section title="Security Considerations" anchor="security-considerations">
      <t> 
         The YANG module specified in this document defines a schema for data 
         that is designed to be accessed via network management protocols such 
         as NETCONF <xref target="RFC6241"/> or RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure transport layer, and the mandatory-to-implement secure transport is Secure Shell (SSH) <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement secure transport is TLS <xref target="RFC8446"/>.
      </t>
      <t>
         BGP data is sensible for security considerations. The model described
          in this document could be used to send BGP information to malicious
          BMP stations. Write access to this model should therefore be
          properly protected. 
      </t>
      <t>
          The session-reset action can demand considerable amount of resources
          from network elements. It should be protected from illegal access.
      </t>
    </section>

    <section title="IANA Considerations" anchor="iana-considerations">
      <section title="The IETF XML Registry">
      	<t>
      	   This document registers two URIs in the IETF XML 
      	   registry <xref target="RFC3688"/>.  Following the format in 
           <xref target="RFC3688"/>, the following registrations are
           requested:</t>
        <t>
          <figure>
          	<artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-bmp
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.
             </artwork>
           </figure>
         </t>
      </section>
    </section>

    <section title="Open Issues">
      <t>
        <list counter="a">
          <t>Shall we copy the TCP tuning and security parameters from the BGP specifications?</t>
        </list>
      </t>
    </section>
  </middle>

  <back>
    <references title="Normative References"> 
      <?rfc include="reference.RFC.7854"?>
      <?rfc include="reference.RFC.6241"?>
      <?rfc include="reference.RFC.8040"?>
      <?rfc include="reference.RFC.6242"?>
      <?rfc include="reference.RFC.8446"?>
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.8174"?>
      <?rfc include="reference.RFC.3688"?>
    </references>
<!--
    <references title="Informative References">
    </references>
        -->
    <?rfc needLines="100"?>

<!--   
    <section title="Changes between revisions">
      </t>   
      <t>v00 - v01
        <list style="symbols">
          <t>Placeholder: xxx</t>
          <t>Placeholder: yyy</t>
        </list>
      </t>
    </section>    
  -->

    <section title="Acknowledgements" numbered="no">
        <t>
          The authors would like to thank ... for their reviews and feedback.
        </t>
    </section>

  </back>
</rfc>
<!-- Local Variables: -->
<!-- fill-column:72 -->
<!-- End: -->

